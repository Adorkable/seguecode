//
//  Main_iPhone.swift
//  Example
//
//  Generated by seguecode [http://bit.ly/seguecode]
//

import UIKit

extension FirstViewController {

   struct StoryboardInstances {
       static let First = StoryboardInstance(identifier: "First")
    }

    struct Segues {
        static let FirstForwardToUIVC = Segue(identifier: "ForwardToUIVC")
        static let FirstGoToSecondSecond = Segue(identifier: "GoTo")
        static let FirstForwardToFirstSecond = Segue(identifier: "ForwardTo")
    }

    @IBAction func performFirstForwardToUIVC(sender : AnyObject? = nil) {
        self.performSegue(FirstViewController.Segues.FirstForwardToUIVC, sender: sender)
    }

    @IBAction func performFirstGoToSecondSecond(sender : AnyObject? = nil) {
        self.performSegue(FirstViewController.Segues.FirstGoToSecondSecond, sender: sender)
    }

    @IBAction func performFirstForwardToFirstSecond(sender : AnyObject? = nil) {
        self.performSegue(FirstViewController.Segues.FirstForwardToFirstSecond, sender: sender)
    }
}

extension UIViewController {

    struct Segues {
        static let BackToFirst = Segue(identifier: "BackTo")
    }

    @IBAction func performBackToFirst(sender : AnyObject? = nil) {
        self.performSegue(UIViewController.Segues.BackToFirst, sender: sender)
    }
}

extension SecondViewController {

   struct StoryboardInstances {
       static let FirstSecond = StoryboardInstance(identifier: "FirstSecond")
       static let SecondSecond = StoryboardInstance(identifier: "SecondSecond")
    }

    struct Segues {
        static let FirstSecondBackToFirst = Segue(identifier: "BackTo")
        static let SecondSecondBackToFirst = Segue(identifier: "BackTo")
    }

    @IBAction func performFirstSecondBackToFirst(sender : AnyObject? = nil) {
        self.performSegue(SecondViewController.Segues.FirstSecondBackToFirst, sender: sender)
    }

    @IBAction func performSecondSecondBackToFirst(sender : AnyObject? = nil) {
        self.performSegue(SecondViewController.Segues.SecondSecondBackToFirst, sender: sender)
    }

    struct TableViewCellPrototypes {
        static let SecondTableCell = UITableView.TableViewCellPrototype(reuseIdentifier: "SecondTableCell")
    }

    func dequeueReusableSecondTableCell(tableView : UITableView) -> UITableViewCell? {
        return tableView.dequeueReusableCell(SecondViewController.TableViewCellPrototypes.SecondTableCell)
    }

    func dequeueReusableSecondTableCell(tableView : UITableView, forIndexPath indexPath : NSIndexPath) -> UITableViewCell {
        return tableView.dequeueReusableCell(SecondViewController.TableViewCellPrototypes.SecondTableCell, forIndexPath : indexPath)
    }

    struct CollectionViewCellPrototypes {
        static let SecondCollectionCell = UICollectionView.CollectionViewCellPrototype(reuseIdentifier: "SecondCollectionCell")
    }

    func dequeueReusableSecondCollectionCell(collectionView : UICollectionView, forIndexPath indexPath : NSIndexPath) -> UICollectionViewCell {
        return collectionView.dequeueReusableCell(SecondViewController.CollectionViewCellPrototypes.SecondCollectionCell, forIndexPath : indexPath)
    }
}
