//
//  DefaultTemplate.swift
//  seguecode
//
//  Created by Ian Grossberg on 8/21/15.
//  Copyright (c) 2015 Adorkable. All rights reserved.
//

import Foundation

import Stencil

class DefaultTemplate: Template {
    struct Keys
    {
        static let FileName = "FileName"
        static let ProjectName = "ProjectName"
        
        static let GeneratedOn = "GeneratedOn"
        
        static let SharedDefinitions = "SharedDefinitions"
        
        static let ViewControllers = "ViewControllers"
        struct ViewController {
            static let Name = "ViewControllerName"
            
            static let SegueCases = "SegueCases"
            struct SegueCase
            {
                static let Identifier = "Identifier"
                static let SourceIdentifier = "SourceIdentifier"
                static let DestinationIdentifier = "DestinationIdentifier"
                static let Value = "Value"
            }
            
            static let PerformFunctions = "PerformFunctions"
            struct PerformFunction
            {
                static let Identifier = "Identifier"
                static let SourceIdentifier = "SourceIdentifier"
                static let DestinationIdentifier = "DestinationIdentifier"
            }
        }
    }
    
    static var topFileComments : String {
        return "//\n" +
        "{% if \(Keys.FileName) %}" +
        "//  {{ \(Keys.FileName) }}\n" +
        "{% endif %}" +
            
        "{% if \(Keys.ProjectName) %}" +
        "//  {{ \(Keys.ProjectName) }}\n" +
        "{% endif %}" +
            
        "//\n" +
        "//  Generated by seguecode [http://bit.ly/seguecode]" +
        "{% if \(Keys.GeneratedOn) %}" +
        " on {{ \(Keys.GeneratedOn) }}" +
        "{% endif %}" +
        "\n" +
        // TODO: copywrite and company info
        "//"
    }

    // TODO: no longer cases, rename
    static var segueCases : String {
        return "{% if viewController.\(Keys.ViewController.SegueCases) %}" +
            
            "\n" +
            "    struct Segues {\n" +
            "{% for segueCase in viewController.\(Keys.ViewController.SegueCases) %}" +
            
            "        static let {{ segueCase.\(Keys.ViewController.SegueCase.SourceIdentifier) }}{{ segueCase.\(Keys.ViewController.SegueCase.Identifier) }}{{ segueCase.\(Keys.ViewController.SegueCase.DestinationIdentifier) }} = Segue(identifier: \"{{ segueCase.\(Keys.ViewController.SegueCase.Value) }}\")\n" +

            "{% endfor %}" +
            "    }\n" +
            
            "{% endif %}"
    }
    
    static var performFunctions : String {
        return "{% if viewController.\(Keys.ViewController.PerformFunctions) %}" +
            "{% for performFunction in viewController.\(Keys.ViewController.PerformFunctions) %}" +
            
            "\n" +
            "    @IBAction func perform{{ performFunction.\(Keys.ViewController.PerformFunction.SourceIdentifier) }}{{ performFunction.\(Keys.ViewController.PerformFunction.Identifier) }}{{ performFunction.\(Keys.ViewController.PerformFunction.DestinationIdentifier) }}(sender : AnyObject? = nil) {\n" +
            "        self.performSegue({{ viewController.\(Keys.ViewController.Name) }}.Segues.{{ performFunction.\(Keys.ViewController.PerformFunction.SourceIdentifier) }}{{ performFunction.\(Keys.ViewController.PerformFunction.Identifier) }}{{ performFunction.\(Keys.ViewController.PerformFunction.DestinationIdentifier) }}, sender: sender)\n" +
            "    }\n" +

            "{% endfor %}" +
            "{% endif %}"
    }
    
    static var sourceFile : String {
        return self.topFileComments + "\n" +
            "\n" +
            "import UIKit\n" +
            
// As soon as you parse multiple Storyboards this will break your project, for now we're always going to export it separately
//            "{% if \(Keys.TogetherSharedDefinitions) %}" +
//            "\n" +
//            "{{ \(Keys.TogetherSharedDefinitions) }}" +
//            "{% endif %}" +
            
            "{% if \(Keys.ViewControllers) %}" +
            "{% for viewController in \(Keys.ViewControllers) %}" +
            
            "\n" +
            "extension {{ viewController.\(Keys.ViewController.Name) }} {\n" +
            self.segueCases +
            self.performFunctions +
            "}\n" +

            "{% endfor %}" +
            "{% endif %}"
    }
    
    static var sharedDefinitions : String {
        return self.sharedUIViewControllerDefinitions 
    }
    
    static var sharedUIViewControllerDefinitions : String {
        return "extension UIViewController {\n" +
            
            "    class Segue\n" +
            "    {\n" +
            "        let identifier : String\n" +
            "\n" +
            "        init(identifier : String) {\n" +
            "            self.identifier = identifier\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            
            "    func performSegue(segue : Segue, sender : AnyObject?) {\n" + // TODO: validate that we're calling from the correct instance of the VC class for classes in multiple instances in storyboards
            "        self.performSegueWithIdentifier(segue.identifier, sender: sender)\n" +
            "    }\n" +
            "}\n"
    }
    
    static var sharedFile : String {
        return self.topFileComments + "\n" +
            "\n" +
            "import UIKit\n" +
            "\n" + 
            self.sharedDefinitions
    }
    
    required init() {
        super.init(templateString: DefaultTemplate.sourceFile)
    }
}
